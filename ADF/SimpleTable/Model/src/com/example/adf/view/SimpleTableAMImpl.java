package com.example.adf.view;

import com.example.adf.view.common.SimpleTableAM;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 12 16:09:33 CET 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SimpleTableAMImpl extends ApplicationModuleImpl implements SimpleTableAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SimpleTableAMImpl() {
    }

    /**
     * Container's getter for AddressVO.
     * @return AddressVO
     */
    public AddressVOImpl getAddressVO() {
        return (AddressVOImpl) findViewObject("AddressVO");
    }

    public void updateData(String theData) {
        System.err.println("Updating data with " + theData);

        DBTransaction txn = getDBTransaction();
        String sql = "UPDATE ADDRESS SET THE_DATA='" + theData + "'";
        System.err.println("EXECUTE:" + sql);
        txn.executeCommand(sql); // TODO: use PreparedStatement!
        txn.commit();
    }

    /**
     * Container's getter for TaskEOView1.
     * @return TaskEOView1
     */
    public ViewObjectImpl getTask() {
        return (ViewObjectImpl) findViewObject("Task");
    }

    /**
     * Container's getter for TaskVO1.
     * @return TaskVO1
     */
    public ViewObjectImpl getChildTask() {
        return (ViewObjectImpl) findViewObject("ChildTask");
    }

    /**
     * Container's getter for TaskParentToChildren1.
     * @return TaskParentToChildren1
     */
    public ViewLinkImpl getTaskParentToChildren1() {
        return (ViewLinkImpl) findViewLink("TaskParentToChildren1");
    }
}
