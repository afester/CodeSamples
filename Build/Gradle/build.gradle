apply from: 'plugin.gradle'

printf("Root project: %s\n", project.name)
printf("Root project: %s\n", project)

task sampleTask {
    println("sampleTask - Configuration phase")

    doFirst() {
       println("sampleTask - Execution phase (doFirst)")
    }

    doLast() {
       println("sampleTask - Execution phase (doLast)")
    }

}


task signJars (dependsOn: sampleTask) {
    // adding task properties - need to use "ext"!
    ext.value = 0

    println("signJars - Configuration phase")

    doFirst() {
       println("signJars - Execution phase (doFirst) " + value)
    }

    doLast() {
       println("signJars - Execution phase (doLast) " + value)
    }
}

// use "<<" to define a simple task with no configuration section
// the closure is simply executed when the task is being called
// The << operator is simply an alias for doLast.
task simpleTask << {
    String taskName = 'simpleTask'
    println(taskName)
    println(name)
    println(someValue)

    subprojects.each { project ->
       printf("PRJ: %s\n", project.name);
    }
}

// Configuring tasks
simpleTask {
   ext.someValue = 35
}

signJars {
    value = 42
}


simpleTask.doFirst {
   println("simpleTask.doFirst!!!")
}

//build.doLast {
//   println("BUILD COMPLETE.")
//}

//distZip.doFirst {
//   println("distZip.")
//}
